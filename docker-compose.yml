version: '3.7'
services:
  prometheus:
    image: strund3r/prometheus:2.14
    volumes:
      - ./conf/prometheus/:/etc/prometheus/
      - prometheus_data:/var/lib/prometheus
    networks:
      - default
      - traefik-public
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
    labels:
        - traefik.frontend.rule=Host:prometheus.${DOMAIN?Variable DOMAIN not set}
        - traefik.enable=true
        - traefik.port=9090
        - traefik.tags=${TRAEFIK_PUBLIC_TAG:-traefik-public}
        - traefik.docker.network=traefik-public
        # Traefik service that listens to HTTP
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # Traefik service that listens to HTTPS
        - traefik.webservice.frontend.entryPoints=https

  node-exporter:
    image: strund3r/node-exporter:0.18.1
    hostname: '{{.Node.ID}}'
    volumes:
      - /proc:/usr/proc
      - /sys:/usr/sys
      - /:/rootfs
    networks:
      - default
      - traefik-public
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    labels:
        - traefik.frontend.rule=Host:exporter.${DOMAIN?Variable DOMAIN not set}
        - traefik.enable=true
        - traefik.port=9100
        - traefik.tags=${TRAEFIK_PUBLIC_TAG:-traefik-public}
        - traefik.docker.network=traefik-public
        # Traefik service that listens to HTTP
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # Traefik service that listens to HTTPS
        - traefik.webservice.frontend.entryPoints=https

  alertmanager:
    image: strund3r/alertmanager:0.19
    volumes:
      - ./conf/alertmanager/:/etc/alertmanager/
    ports:
      - 9093:9093
    networks:
      - default
      - traefik-public

  cadvisor:
    image: google/cadvisor
    hostname: '{{.Node.ID}}'
    networks:
      - default
      - traefik-public
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    command: >
      --port=8081
    labels:
        - traefik.frontend.rule=Host:cadvisor.${DOMAIN?Variable DOMAIN not set}
        - traefik.enable=true
        - traefik.port=8081
        - traefik.tags=${TRAEFIK_PUBLIC_TAG:-traefik-public}
        - traefik.docker.network=traefik-public
        # Traefik service that listens to HTTP
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # Traefik service that listens to HTTPS
        - traefik.webservice.frontend.entryPoints=https

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
    env_file:
      - ./conf/grafana/grafana.config
    ports:
      - 3000:3000
    networks:
      - default
      - traefik-public
    deploy:   
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
    labels:
        - traefik.frontend.rule=Host:grafana.${DOMAIN?Variable DOMAIN not set}
        - traefik.enable=true
        - traefik.port=3000
        - traefik.tags=${TRAEFIK_PUBLIC_TAG:-traefik-public}
        - traefik.docker.network=traefik-public
        # Traefik service that listens to HTTP
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # Traefik service that listens to HTTPS
        - traefik.webservice.frontend.entryPoints=https

volumes:
    prometheus_data:
    grafana_data:
