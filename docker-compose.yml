version: '3.7'
services:
  prometheus:
    image: strund3r/prometheus:2.14
    volumes:
      - ./conf/prometheus/:/etc/prometheus/
      - prometheus_data:/var/lib/prometheus
    networks:
      - traefik-public
      - default
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.http.routers.prometheus.rule=Host(`prometheus.arscrift.digital`)"
        - "traefik.http.routers.prometheus.service=prometheus"
        - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
        - "traefik.http.routers.prometheus.tls.certresolver=leresolver"
        - "traefik.http.routers.prometheus.entrypoints=websecure"

  node-exporter:
    image: strund3r/node-exporter:0.18.1
    hostname: '{{.Node.ID}}'
    volumes:
      - /proc:/usr/proc
      - /sys:/usr/sys
      - /:/rootfs
    networks:
      - traefik-public
      - default
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.http.routers.exporter.rule=Host(`exporter.arscrift.digital`)"
        - "traefik.http.routers.exporter.service=exporter"
        - "traefik.http.services.exporter.loadbalancer.server.port=9100"
        - "traefik.http.routers.exporter.tls.certresolver=leresolver"
        - "traefik.http.routers.exporter.entrypoints=websecure"

  alertmanager:
    image: strund3r/alertmanager:0.19
    volumes:
      - ./conf/alertmanager/:/etc/alertmanager/
    ports:
      - 9093:9093
    networks:
      - traefik-public
      - default

  cadvisor:
    image: google/cadvisor
    hostname: '{{.Node.ID}}'
    networks:
      - traefik-public
      - default
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.http.routers.cadvisor.rule=Host(`cadvisor.arscrift.digital`)"
        - "traefik.http.routers.cadvisor.service=cadvisor"
        - "traefik.http.services.cadvisor.loadbalancer.server.port=8081"
        - "traefik.http.routers.cadvisor.tls.certresolver=leresolver"
        - "traefik.http.routers.cadvisor.entrypoints=websecure"
    command: >
      --port=8081

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
    env_file:
      - ./conf/grafana/grafana.config
    networks:
      - traefik-public
      - default
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.http.routers.grafana.rule=Host(`grafana.arscrift.digital`)"
        - "traefik.http.routers.grafana.service=grafana"
        - "traefik.http.services.grafana.loadbalancer.server.port=3000"
        - "traefik.http.routers.grafana.tls.certresolver=leresolver"
        - "traefik.http.routers.grafana.entrypoints=websecure"

networks:
  traefik-public:
    external: true
  default:
    external: false

volumes:
    prometheus_data:
    grafana_data:
